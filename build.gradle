plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springdoc.openapi-gradle-plugin' version '1.9.0'
}

group = 'br.com.gazintech'
version = '0.0.1-SNAPSHOT'

tasks.named('jar') {
    enabled = false
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'net.logstash.logback:logstash-logback-encoder:8.1'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    testImplementation 'org.testcontainers:testcontainers:1.21.3'
    testImplementation 'org.testcontainers:postgresql:1.21.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.21.3'
    testImplementation 'com.redis:testcontainers-redis:2.2.2'
}

openApi {
    apiDocsUrl.set("http://localhost:8080/v3/api-docs")
    outputDir.set(file("${projectDir}"))
    outputFileName.set("openapi-swagger.yaml")
    waitTimeInSeconds.set(30)
}

jacoco {
    toolVersion = "0.8.13"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
